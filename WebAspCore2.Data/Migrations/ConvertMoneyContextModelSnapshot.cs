// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebAspCore2.Data;
using WebAspCore2.Data.Models;

namespace WebAspCore2.Data.Migrations
{
    [DbContext(typeof(ConvertMoneyContext))]
    partial class ConvertMoneyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAspCore2.Data.Models.ExchangeRate", b =>
                {
                    b.Property<int>("ExchangeRateID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ExchangeRateType");

                    b.Property<Guid>("MoneyID");

                    b.Property<decimal>("Value")
                        .HasColumnType("money");

                    b.HasKey("ExchangeRateID");

                    b.HasIndex("MoneyID");

                    b.ToTable("ExchangeRates");
                });

            modelBuilder.Entity("WebAspCore2.Data.Models.Money", b =>
                {
                    b.Property<Guid>("MoneyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("ShortName");

                    b.HasKey("MoneyID");

                    b.ToTable("Moneys");
                });

            modelBuilder.Entity("WebAspCore2.Data.Models.ExchangeRate", b =>
                {
                    b.HasOne("WebAspCore2.Data.Models.Money", "Money")
                        .WithMany("ExchangeRates")
                        .HasForeignKey("MoneyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
